
package com.carservice.project.wzcx;

import org.springframework.stereotype.Component;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@Component
@WebServiceClient(name = "TmriOutAccess", targetNamespace = "http://webServices.service.dahong.com", wsdlLocation = "http://61.191.211.20:8090/trffweb/services/TmriOutAccess?wsdl")
public class TmriOutAccess
    extends Service
{

    private final static URL TMRIOUTACCESS_WSDL_LOCATION;
    private final static WebServiceException TMRIOUTACCESS_EXCEPTION;
    private final static QName TMRIOUTACCESS_QNAME = new QName("http://webServices.service.dahong.com", "TmriOutAccess");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://61.191.211.20:8090/trffweb/services/TmriOutAccess?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TMRIOUTACCESS_WSDL_LOCATION = url;
        TMRIOUTACCESS_EXCEPTION = e;
    }

    public TmriOutAccess() {
        super(__getWsdlLocation(), TMRIOUTACCESS_QNAME);
    }

    public TmriOutAccess(WebServiceFeature... features) {
        super(__getWsdlLocation(), TMRIOUTACCESS_QNAME, features);
    }

    public TmriOutAccess(URL wsdlLocation) {
        super(wsdlLocation, TMRIOUTACCESS_QNAME);
    }

    public TmriOutAccess(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TMRIOUTACCESS_QNAME, features);
    }

    public TmriOutAccess(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TmriOutAccess(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpSoap11Endpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpSoap11Endpoint() {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpSoap11Endpoint"), TmriOutAccessPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpSoap11Endpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpSoap11Endpoint"), TmriOutAccessPortType.class, features);
    }

    /**
     *
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpSoap12Endpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpSoap12Endpoint() {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpSoap12Endpoint"), TmriOutAccessPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpSoap12Endpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpSoap12Endpoint"), TmriOutAccessPortType.class, features);
    }

    /**
     *
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpEndpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpEndpoint() {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpEndpoint"), TmriOutAccessPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TmriOutAccessPortType
     */
    @WebEndpoint(name = "TmriOutAccessHttpEndpoint")
    public TmriOutAccessPortType getTmriOutAccessHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://webServices.service.dahong.com", "TmriOutAccessHttpEndpoint"), TmriOutAccessPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TMRIOUTACCESS_EXCEPTION!= null) {
            throw TMRIOUTACCESS_EXCEPTION;
        }
        return TMRIOUTACCESS_WSDL_LOCATION;
    }

}
